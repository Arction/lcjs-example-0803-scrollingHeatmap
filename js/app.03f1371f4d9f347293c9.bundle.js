(self.webpackChunk=self.webpackChunk||[]).push([[143],{138:(e,t,a)=>{const s=a(475),{lightningChart:n,PalettedFill:o,LUT:r,emptyLine:l,AxisScrollStrategies:i,AxisTickStrategies:m,LegendBoxBuilders:p,regularColorSteps:c,Themes:d}=s,{createSpectrumDataGenerator:g}=a(27),u=512,h=n().ChartXY({}).setTitle("Scrolling Heatmap Spectrogram");h.getDefaultAxisX().setTitle("Time").setScrollStrategy(i.progressive).setInterval({start:-1e4,end:0,stopAxisAfter:!1}).setTickStrategy(m.Time),h.getDefaultAxisY().setTitle("Frequency (Hz)").setInterval({start:0,end:u});const w=new o({lut:new r({steps:c(0,75,h.getTheme().examples.spectrogramColorPalette),units:"dB",interpolate:!0}),lookUpProperty:"value"}),S=h.addHeatmapScrollingGridSeries({scrollDimension:"columns",resolution:u,start:{x:0,y:0},step:{x:10,y:1}}).setFillStyle(w).setWireframeStyle(l).setDataCleaning({minDataPointCount:1e3});h.addLegendBox(p.HorizontalLegendBox).setAutoDispose({type:"max-width",maxWidth:.8}).add(h);let f=0;g().setSampleSize(u).setNumberOfSamples(1e3).generate().toPromise().then((e=>e.map((e=>e.map((e=>80*e)))))).then((e=>{let t=window.performance.now(),a=0;const s=()=>{const n=window.performance.now(),o=Math.floor(100*(n-t)/1e3),r=Math.min(o-a,100);if(r>0){const t=[];for(let s=0;s<r;s++){const n=(a+s)%e.length,o=e[n];t.push(o)}S.addIntensityValues(t),a+=r,f+=r*u}requestAnimationFrame(s)};s()}));const x=h.getTitle();let D=Date.now(),T=Date.now();setInterval((()=>{if(f>0&&Date.now()-D>0){const e=1e3*f/(Date.now()-D);h.setTitle(`${x} (${Math.round(e)} data points / s)`)}Date.now()-T>=5e3&&(D=T=Date.now(),f=0)}),1e3)}},e=>{e.O(0,[736],(()=>(138,e(e.s=138)))),e.O()}]);