(self.webpackChunk=self.webpackChunk||[]).push([[143],{138:(e,t,a)=>{const s=a(475),{lightningChart:n,PalettedFill:o,LUT:l,emptyLine:r,AxisScrollStrategies:i,AxisTickStrategies:m,LegendBoxBuilders:p,regularColorSteps:c,Themes:d}=s,{createSpectrumDataGenerator:g}=a(27),u=512,S=n().ChartXY({}).setTitle("Scrolling Heatmap Spectrogram");S.getDefaultAxisX().setTitle("Time").setScrollStrategy(i.progressive).setInterval({start:-1e4,end:0,stopAxisAfter:!1}).setTickStrategy(m.Time),S.getDefaultAxisY().setTitle("Frequency (Hz)").setInterval({start:0,end:u});const w=new o({lut:new l({steps:c(0,75,S.getTheme().examples.spectrogramColorPalette),units:"dB",interpolate:!0}),lookUpProperty:"value"}),h=S.addHeatmapScrollingGridSeries({scrollDimension:"columns",resolution:u,start:{x:0,y:0},step:{x:5,y:1}}).setFillStyle(w).setWireframeStyle(r).setDataCleaning({minDataPointCount:1e3}),x=(S.addLegendBox(p.HorizontalLegendBox).setAutoDispose({type:"max-width",maxWidth:.8}).add(S),(e,t)=>{const a=Math.round(e/5);h.invalidateIntensityValues({iSample:a,values:[t]})});let D=0;g().setSampleSize(u).setNumberOfSamples(1e3).generate().toPromise().then((e=>e.map((e=>e.map((e=>80*e)))))).then((e=>{let t=0,a=window.performance.now(),s=0;const n=()=>{const o=window.performance.now();let l=100*(o-a)/1e3+s;s=l%1,l=Math.floor(l);for(let s=0;s<l;s+=1){const n=a+(s+1)/l*(o-a),r=e[t];t=(t+1)%e.length,x(n,r)}D+=l*u,a=o,requestAnimationFrame(n)};n()}));const f=S.getTitle();let T=Date.now(),y=Date.now();setInterval((()=>{if(D>0&&Date.now()-T>0){const e=1e3*D/(Date.now()-T);S.setTitle(`${f} (${Math.round(e)} data points / s)`)}Date.now()-y>=5e3&&(T=y=Date.now(),D=0)}),1e3)}},e=>{e.O(0,[736],(()=>(138,e(e.s=138)))),e.O()}]);